{
  "id": "4ec4c693-6a08-4e80-b0d5-de2c97ca39ba",
  "data": {
    "nodes": [
      {
        "width": 384,
        "height": 367,
        "id": "PyPDFLoader-w5mkf",
        "type": "genericNode",
        "position": { "x": 1141.3695026959558, "y": 534.0715480463963 },
        "data": {
          "type": "PyPDFLoader",
          "node": {
            "template": {
              "file_path": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "sample2.pdf",
                "suffixes": [".pdf"],
                "password": false,
                "name": "file_path",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "file",
                "list": false,
                "fileTypes": ["pdf"],
                "file_path": "/Users/sunil/Library/Caches/genflow/993e61e6-bca9-412b-b8e3-2431fa110bd3/f721820321f65f1e9eb1f9453316f91b77b5e424f97eef1c25e73367bb1be74f.pdf"
              },
              "metadata": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": [{ "": "" }],
                "password": false,
                "name": "metadata",
                "display_name": "Metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "_type": "PyPDFLoader"
            },
            "description": "Load PDF using pypdf into list of documents.",
            "base_classes": ["Document"],
            "display_name": "PyPDFLoader",
            "custom_fields": {},
            "output_types": ["Document"],
            "documentation": "https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf",
            "beta": false,
            "error": null
          },
          "id": "PyPDFLoader-w5mkf"
        },
        "selected": false,
        "positionAbsolute": { "x": 1141.3695026959558, "y": 534.0715480463963 },
        "dragging": false
      },
      {
        "width": 384,
        "height": 501,
        "id": "RecursiveCharacterTextSplitter-sQzj5",
        "type": "genericNode",
        "position": { "x": 1714.043513771899, "y": 535.3813959973226 },
        "data": {
          "type": "RecursiveCharacterTextSplitter",
          "node": {
            "template": {
              "code": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": true,
                "value": "from typing import Optional\nfrom genflow import CustomComponent\nfrom langchain.schema import Document\nfrom genflow.utils.util import build_loader_repr_from_documents\n\n\nclass RecursiveCharacterTextSplitterComponent(CustomComponent):\n    display_name: str = \"Recursive Character Text Splitter\"\n    description: str = \"Split text into chunks of a specified length.\"\n    documentation: str = \"https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\n                \"display_name\": \"Documents\",\n                \"info\": \"The documents to split.\",\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on.\\nIf left empty defaults to [\"\\\\n\\\\n\", \"\\\\n\", \" \", \"\"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Chunk Size\",\n                \"info\": \"The maximum length of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        documents: list[Document],\n        separators: Optional[list[str]] = None,\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n    ) -> list[Document]:\n        \"\"\"\n        Split text into chunks of a specified length.\n\n        Args:\n            separators (list[str]): The characters to split on.\n            chunk_size (int): The maximum length of each chunk.\n            chunk_overlap (int): The amount of overlap between chunks.\n            length_function (function): The function to use to calculate the length of the text.\n\n        Returns:\n            list[str]: The chunks of text.\n        \"\"\"\n        from langchain.text_splitter import RecursiveCharacterTextSplitter\n\n        if separators == \"\":\n            separators = None\n        elif separators:\n            # check if the separators list has escaped characters\n            # if there are escaped characters, unescape them\n            separators = [x.encode().decode(\"unicode-escape\") for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter = RecursiveCharacterTextSplitter(\n            separators=separators,\n            chunk_size=chunk_size,\n            chunk_overlap=chunk_overlap,\n        )\n\n        docs = splitter.split_documents(documents)\n        self.repr_value = build_loader_repr_from_documents(docs)\n        return docs\n",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false
              },
              "_type": "CustomComponent",
              "chunk_overlap": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "20",
                "password": false,
                "name": "chunk_overlap",
                "display_name": "Chunk Overlap",
                "advanced": false,
                "dynamic": false,
                "info": "The amount of overlap between chunks.",
                "type": "int",
                "list": false
              },
              "chunk_size": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "200",
                "password": false,
                "name": "chunk_size",
                "display_name": "Chunk Size",
                "advanced": false,
                "dynamic": false,
                "info": "The maximum length of each chunk.",
                "type": "int",
                "list": false
              },
              "documents": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "documents",
                "display_name": "Documents",
                "advanced": false,
                "dynamic": false,
                "info": "The documents to split.",
                "type": "Document",
                "list": true
              },
              "separators": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "separators",
                "display_name": "Separators",
                "advanced": false,
                "dynamic": false,
                "info": "The characters to split on.\nIf left empty defaults to [\"\\n\\n\", \"\\n\", \" \", \"\"].",
                "type": "str",
                "list": true,
                "value": ["/n"]
              }
            },
            "description": "Split text into chunks of a specified length.",
            "base_classes": ["Document"],
            "display_name": "Recursive Character Text Splitter",
            "custom_fields": {
              "chunk_overlap": null,
              "chunk_size": null,
              "documents": null,
              "separators": null
            },
            "output_types": ["RecursiveCharacterTextSplitter"],
            "documentation": "https://docs.genflow.org/components/text-splitters#recursivecharactertextsplitter",
            "beta": true,
            "error": null
          },
          "id": "RecursiveCharacterTextSplitter-sQzj5"
        },
        "selected": false,
        "positionAbsolute": { "x": 1714.043513771899, "y": 535.3813959973226 },
        "dragging": false
      },
      {
        "width": 384,
        "height": 539,
        "id": "Chroma-DC0MI",
        "type": "genericNode",
        "position": { "x": 2372.1586409149377, "y": 762.5481638049031 },
        "data": {
          "type": "Chroma",
          "node": {
            "template": {
              "code": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": false,
                "multiline": true,
                "value": "from typing import Optional, Union\nfrom genflow import CustomComponent\n\nfrom langchain.vectorstores import Chroma\nfrom langchain.schema import Document\nfrom langchain.vectorstores.base import VectorStore\nfrom langchain.schema import BaseRetriever\nfrom langchain.embeddings.base import Embeddings\nimport chromadb  # type: ignore\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    beta: bool = True\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"genflow\"},\n            \"persist\": {\"display_name\": \"Persist\"},\n            \"persist_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"documents\": {\"display_name\": \"Documents\", \"is_list\": True},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        persist: bool,\n        chroma_server_ssl_enabled: bool,\n        persist_directory: Optional[str] = None,\n        embedding: Optional[Embeddings] = None,\n        documents: Optional[Document] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins\n                or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n        if documents is not None and embedding is not None:\n            return Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=persist_directory if persist else None,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n\n        return Chroma(\n            persist_directory=persist_directory, client_settings=chroma_settings\n        )\n",
                "password": false,
                "name": "code",
                "advanced": false,
                "type": "code",
                "list": false
              },
              "_type": "CustomComponent",
              "chroma_server_cors_allow_origins": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "chroma_server_cors_allow_origins",
                "display_name": "Server CORS Allow Origins",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "chroma_server_grpc_port": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "chroma_server_grpc_port",
                "display_name": "Server gRPC Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "chroma_server_host": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "chroma_server_host",
                "display_name": "Server Host",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "chroma_server_port": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "chroma_server_port",
                "display_name": "Server Port",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "chroma_server_ssl_enabled": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "chroma_server_ssl_enabled",
                "display_name": "Server SSL Enabled",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "collection_name": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "genflow",
                "password": false,
                "name": "collection_name",
                "display_name": "Collection Name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "documents": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "documents",
                "display_name": "Documents",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Document",
                "list": true
              },
              "embedding": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "embedding",
                "display_name": "Embedding",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Embeddings",
                "list": false
              },
              "persist": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "persist",
                "display_name": "Persist",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "persist_directory": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "persist_directory",
                "display_name": "Persist Directory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "value": "/chroma"
              }
            },
            "description": "Implementation of Vector Store using Chroma",
            "base_classes": ["VectorStore", "BaseRetriever"],
            "display_name": "Chroma",
            "custom_fields": {
              "chroma_server_cors_allow_origins": null,
              "chroma_server_grpc_port": null,
              "chroma_server_host": null,
              "chroma_server_port": null,
              "chroma_server_ssl_enabled": null,
              "collection_name": null,
              "documents": null,
              "embedding": null,
              "persist": null,
              "persist_directory": null
            },
            "output_types": ["Chroma"],
            "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
            "beta": true,
            "error": null
          },
          "id": "Chroma-DC0MI"
        },
        "selected": false,
        "positionAbsolute": { "x": 2372.1586409149377, "y": 762.5481638049031 },
        "dragging": false
      },
      {
        "width": 384,
        "height": 339,
        "id": "RetrievalQA-Va5dV",
        "type": "genericNode",
        "position": { "x": 3063.996645360481, "y": 492.30454810978654 },
        "data": {
          "type": "RetrievalQA",
          "node": {
            "template": {
              "callbacks": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "langchain_core.callbacks.base.BaseCallbackHandler",
                "list": true
              },
              "combine_documents_chain": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "combine_documents_chain",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseCombineDocumentsChain",
                "list": false
              },
              "memory": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseMemory",
                "list": false
              },
              "retriever": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "retriever",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseRetriever",
                "list": false
              },
              "input_key": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "query",
                "password": false,
                "name": "input_key",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "metadata": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "output_key": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "result",
                "password": false,
                "name": "output_key",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "return_source_documents": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": true,
                "password": false,
                "name": "return_source_documents",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "tags": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "verbose": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "verbose",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "RetrievalQA"
            },
            "description": "Chain for question-answering against an index.",
            "base_classes": [
              "Chain",
              "RetrievalQA",
              "BaseRetrievalQA",
              "Callable"
            ],
            "display_name": "RetrievalQA",
            "custom_fields": {},
            "output_types": [],
            "documentation": "https://python.langchain.com/docs/modules/chains/popular/vector_db_qa",
            "beta": false,
            "error": null
          },
          "id": "RetrievalQA-Va5dV"
        },
        "selected": false,
        "positionAbsolute": { "x": 3063.996645360481, "y": 492.30454810978654 },
        "dragging": false
      },
      {
        "width": 384,
        "height": 333,
        "id": "CombineDocsChain-cy7FH",
        "type": "genericNode",
        "position": { "x": 2364.5518889268724, "y": -248.04501024221906 },
        "data": {
          "type": "CombineDocsChain",
          "node": {
            "template": {
              "llm": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "llm",
                "display_name": "LLM",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseLanguageModel",
                "list": false
              },
              "chain_type": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "stuff",
                "password": false,
                "options": ["stuff", "map_reduce", "map_rerank", "refine"],
                "name": "chain_type",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "_type": "load_qa_chain"
            },
            "description": "Load question answering chain.",
            "base_classes": ["BaseCombineDocumentsChain", "Callable"],
            "display_name": "CombineDocsChain",
            "custom_fields": {},
            "output_types": [],
            "documentation": "",
            "beta": false,
            "error": null
          },
          "id": "CombineDocsChain-cy7FH"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 2364.5518889268724,
          "y": -248.04501024221906
        },
        "dragging": false
      },
      {
        "width": 384,
        "height": 577,
        "id": "ConversationBufferMemory-CRI7S",
        "type": "genericNode",
        "position": { "x": 2369.216923433187, "y": 132.02853807972937 },
        "data": {
          "type": "ConversationBufferMemory",
          "node": {
            "template": {
              "chat_memory": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "chat_memory",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "BaseChatMessageHistory",
                "list": false
              },
              "ai_prefix": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": "AI",
                "password": false,
                "name": "ai_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "human_prefix": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": "Human",
                "password": false,
                "name": "human_prefix",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "input_key": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "input",
                "password": false,
                "name": "input_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Input when more than one variable is available.",
                "type": "str",
                "list": false
              },
              "memory_key": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "chat_history",
                "password": false,
                "name": "memory_key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "output_key": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "output",
                "password": false,
                "name": "output_key",
                "advanced": false,
                "dynamic": false,
                "info": "The variable to be used as Chat Output (e.g. answer in a ConversationalRetrievalChain)",
                "type": "str",
                "list": false
              },
              "return_messages": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "return_messages",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false,
                "value": true
              },
              "_type": "ConversationBufferMemory"
            },
            "description": "Buffer for storing conversation memory.",
            "base_classes": [
              "ConversationBufferMemory",
              "BaseMemory",
              "BaseChatMemory"
            ],
            "display_name": "ConversationBufferMemory",
            "custom_fields": {},
            "output_types": [],
            "documentation": "https://python.langchain.com/docs/modules/memory/how_to/buffer",
            "beta": false,
            "error": null
          },
          "id": "ConversationBufferMemory-CRI7S"
        },
        "selected": false,
        "positionAbsolute": { "x": 2369.216923433187, "y": 132.02853807972937 },
        "dragging": false
      },
      {
        "width": 384,
        "height": 453,
        "id": "OpenAIEmbeddings-RwBww",
        "type": "genericNode",
        "position": { "x": 1719.4271270117931, "y": 1094.45656784398 },
        "data": {
          "type": "OpenAIEmbeddings",
          "node": {
            "template": {
              "allowed_special": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": [],
                "password": false,
                "name": "allowed_special",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "async_client": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "async_client",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "chunk_size": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 1000,
                "password": false,
                "name": "chunk_size",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "client": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "client",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "default_headers": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "default_headers",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "default_query": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "default_query",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "deployment": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "text-embedding-ada-002",
                "password": false,
                "name": "deployment",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "disallowed_special": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": ["()"],
                "password": false,
                "name": "disallowed_special",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "embedding_ctx_length": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 8191,
                "password": false,
                "name": "embedding_ctx_length",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "headers": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": true,
                "value": "{\"Authorization\": \"Bearer <token>\"}",
                "password": false,
                "name": "headers",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "http_client": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "http_client",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "max_retries": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 2,
                "password": false,
                "name": "max_retries",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "model": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "text-embedding-ada-002",
                "password": false,
                "name": "model",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "model_kwargs": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "openai_api_base": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "value": ""
              },
              "openai_api_key": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_api_type": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "openai_api_type",
                "display_name": "OpenAI API Type",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "value": ""
              },
              "openai_api_version": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "openai_api_version",
                "display_name": "OpenAI API Version",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "value": ""
              },
              "openai_organization": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_proxy": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "request_timeout": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "request_timeout",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false
              },
              "show_progress_bar": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "show_progress_bar",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "skip_empty": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "skip_empty",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "tiktoken_model_name": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "tiktoken_model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false,
                "value": ""
              },
              "_type": "OpenAIEmbeddings"
            },
            "description": "OpenAI embedding models.",
            "base_classes": ["Embeddings", "OpenAIEmbeddings"],
            "display_name": "OpenAIEmbeddings",
            "custom_fields": {},
            "output_types": [],
            "documentation": "https://python.langchain.com/docs/modules/data_connection/text_embedding/integrations/openai",
            "beta": false,
            "error": null
          },
          "id": "OpenAIEmbeddings-RwBww"
        },
        "selected": false,
        "positionAbsolute": { "x": 1719.4271270117931, "y": 1094.45656784398 },
        "dragging": false
      },
      {
        "width": 384,
        "height": 629,
        "id": "ChatOpenAI-IUuxh",
        "type": "genericNode",
        "position": { "x": 1716.9389427446624, "y": -141.93231630144223 },
        "data": {
          "type": "ChatOpenAI",
          "node": {
            "template": {
              "callbacks": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "callbacks",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "langchain.callbacks.base.BaseCallbackHandler",
                "list": true
              },
              "async_client": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "async_client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "cache": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "cache",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "client": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "default_headers": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "default_headers",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "default_query": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "default_query",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "http_client": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "http_client",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "Any",
                "list": false
              },
              "max_retries": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 2,
                "password": false,
                "name": "max_retries",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "max_tokens": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": true,
                "name": "max_tokens",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false,
                "value": ""
              },
              "metadata": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "metadata",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "model_kwargs": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "model_kwargs",
                "advanced": true,
                "dynamic": false,
                "info": "",
                "type": "dict",
                "list": false
              },
              "model_name": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "gpt-3.5-turbo-16k",
                "password": false,
                "options": [
                  "gpt-4-1106-preview",
                  "gpt-4",
                  "gpt-4-32k",
                  "gpt-3.5-turbo",
                  "gpt-3.5-turbo-16k"
                ],
                "name": "model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "n": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": 1,
                "password": false,
                "name": "n",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "int",
                "list": false
              },
              "openai_api_base": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "password": false,
                "name": "openai_api_base",
                "display_name": "OpenAI API Base",
                "advanced": false,
                "dynamic": false,
                "info": "\nThe base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.\n",
                "type": "str",
                "list": false
              },
              "openai_api_key": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI API Key",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_organization": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_organization",
                "display_name": "OpenAI Organization",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "openai_proxy": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "openai_proxy",
                "display_name": "OpenAI Proxy",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "request_timeout": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "request_timeout",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false
              },
              "streaming": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "streaming",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "tags": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tags",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": true
              },
              "temperature": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 0.7,
                "password": false,
                "name": "temperature",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "float",
                "list": false
              },
              "tiktoken_model_name": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "password": false,
                "name": "tiktoken_model_name",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "str",
                "list": false
              },
              "verbose": {
                "required": false,
                "placeholder": "",
                "show": false,
                "multiline": false,
                "value": false,
                "password": false,
                "name": "verbose",
                "advanced": false,
                "dynamic": false,
                "info": "",
                "type": "bool",
                "list": false
              },
              "_type": "ChatOpenAI"
            },
            "description": "`OpenAI` Chat large language models API.",
            "base_classes": [
              "BaseLanguageModel",
              "BaseChatModel",
              "ChatOpenAI",
              "BaseLLM"
            ],
            "display_name": "ChatOpenAI",
            "custom_fields": {},
            "output_types": [],
            "documentation": "https://python.langchain.com/docs/modules/model_io/models/chat/integrations/openai",
            "beta": false,
            "error": null
          },
          "id": "ChatOpenAI-IUuxh"
        },
        "selected": false,
        "positionAbsolute": {
          "x": 1716.9389427446624,
          "y": -141.93231630144223
        },
        "dragging": false
      }
    ],
    "edges": [
      {
        "source": "PyPDFLoader-w5mkf",
        "target": "RecursiveCharacterTextSplitter-sQzj5",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-w5mkfœ}",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-sQzj5œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "id": "reactflow__edge-PyPDFLoader-w5mkf{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-w5mkfœ}-RecursiveCharacterTextSplitter-sQzj5{œfieldNameœ:œdocumentsœ,œidœ:œRecursiveCharacterTextSplitter-sQzj5œ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "RecursiveCharacterTextSplitter-sQzj5",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": ["Document"],
            "dataType": "PyPDFLoader",
            "id": "PyPDFLoader-w5mkf"
          }
        },
        "style": { "stroke": "#555" },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "RecursiveCharacterTextSplitter-sQzj5",
        "target": "Chroma-DC0MI",
        "sourceHandle": "{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-sQzj5œ}",
        "targetHandle": "{œfieldNameœ:œdocumentsœ,œidœ:œChroma-DC0MIœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "id": "reactflow__edge-RecursiveCharacterTextSplitter-sQzj5{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œRecursiveCharacterTextSplitterœ,œidœ:œRecursiveCharacterTextSplitter-sQzj5œ}-Chroma-DC0MI{œfieldNameœ:œdocumentsœ,œidœ:œChroma-DC0MIœ,œinputTypesœ:null,œtypeœ:œDocumentœ}",
        "data": {
          "targetHandle": {
            "fieldName": "documents",
            "id": "Chroma-DC0MI",
            "inputTypes": null,
            "type": "Document"
          },
          "sourceHandle": {
            "baseClasses": ["Document"],
            "dataType": "RecursiveCharacterTextSplitter",
            "id": "RecursiveCharacterTextSplitter-sQzj5"
          }
        },
        "style": { "stroke": "#555" },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "Chroma-DC0MI",
        "target": "RetrievalQA-Va5dV",
        "sourceHandle": "{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-DC0MIœ}",
        "targetHandle": "{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-Va5dVœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
        "id": "reactflow__edge-Chroma-DC0MI{œbaseClassesœ:[œVectorStoreœ,œBaseRetrieverœ],œdataTypeœ:œChromaœ,œidœ:œChroma-DC0MIœ}-RetrievalQA-Va5dV{œfieldNameœ:œretrieverœ,œidœ:œRetrievalQA-Va5dVœ,œinputTypesœ:null,œtypeœ:œBaseRetrieverœ}",
        "data": {
          "targetHandle": {
            "fieldName": "retriever",
            "id": "RetrievalQA-Va5dV",
            "inputTypes": null,
            "type": "BaseRetriever"
          },
          "sourceHandle": {
            "baseClasses": ["VectorStore", "BaseRetriever"],
            "dataType": "Chroma",
            "id": "Chroma-DC0MI"
          }
        },
        "style": { "stroke": "#555" },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "CombineDocsChain-cy7FH",
        "target": "RetrievalQA-Va5dV",
        "sourceHandle": "{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-cy7FHœ}",
        "targetHandle": "{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-Va5dVœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}",
        "id": "reactflow__edge-CombineDocsChain-cy7FH{œbaseClassesœ:[œBaseCombineDocumentsChainœ,œCallableœ],œdataTypeœ:œCombineDocsChainœ,œidœ:œCombineDocsChain-cy7FHœ}-RetrievalQA-Va5dV{œfieldNameœ:œcombine_documents_chainœ,œidœ:œRetrievalQA-Va5dVœ,œinputTypesœ:null,œtypeœ:œBaseCombineDocumentsChainœ}",
        "data": {
          "targetHandle": {
            "fieldName": "combine_documents_chain",
            "id": "RetrievalQA-Va5dV",
            "inputTypes": null,
            "type": "BaseCombineDocumentsChain"
          },
          "sourceHandle": {
            "baseClasses": ["BaseCombineDocumentsChain", "Callable"],
            "dataType": "CombineDocsChain",
            "id": "CombineDocsChain-cy7FH"
          }
        },
        "style": { "stroke": "#555" },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "ConversationBufferMemory-CRI7S",
        "target": "RetrievalQA-Va5dV",
        "sourceHandle": "{œbaseClassesœ:[œConversationBufferMemoryœ,œBaseMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-CRI7Sœ}",
        "targetHandle": "{œfieldNameœ:œmemoryœ,œidœ:œRetrievalQA-Va5dVœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
        "id": "reactflow__edge-ConversationBufferMemory-CRI7S{œbaseClassesœ:[œConversationBufferMemoryœ,œBaseMemoryœ,œBaseChatMemoryœ],œdataTypeœ:œConversationBufferMemoryœ,œidœ:œConversationBufferMemory-CRI7Sœ}-RetrievalQA-Va5dV{œfieldNameœ:œmemoryœ,œidœ:œRetrievalQA-Va5dVœ,œinputTypesœ:null,œtypeœ:œBaseMemoryœ}",
        "data": {
          "targetHandle": {
            "fieldName": "memory",
            "id": "RetrievalQA-Va5dV",
            "inputTypes": null,
            "type": "BaseMemory"
          },
          "sourceHandle": {
            "baseClasses": [
              "ConversationBufferMemory",
              "BaseMemory",
              "BaseChatMemory"
            ],
            "dataType": "ConversationBufferMemory",
            "id": "ConversationBufferMemory-CRI7S"
          }
        },
        "style": { "stroke": "#555" },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "OpenAIEmbeddings-RwBww",
        "target": "Chroma-DC0MI",
        "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-RwBwwœ}",
        "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-DC0MIœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "id": "reactflow__edge-OpenAIEmbeddings-RwBww{œbaseClassesœ:[œEmbeddingsœ,œOpenAIEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-RwBwwœ}-Chroma-DC0MI{œfieldNameœ:œembeddingœ,œidœ:œChroma-DC0MIœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
        "data": {
          "targetHandle": {
            "fieldName": "embedding",
            "id": "Chroma-DC0MI",
            "inputTypes": null,
            "type": "Embeddings"
          },
          "sourceHandle": {
            "baseClasses": ["Embeddings", "OpenAIEmbeddings"],
            "dataType": "OpenAIEmbeddings",
            "id": "OpenAIEmbeddings-RwBww"
          }
        },
        "style": { "stroke": "#555" },
        "className": "stroke-gray-900 ",
        "animated": false,
        "selected": false
      },
      {
        "source": "ChatOpenAI-IUuxh",
        "sourceHandle": "{œbaseClassesœ:[œBaseLanguageModelœ,œBaseChatModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-IUuxhœ}",
        "target": "CombineDocsChain-cy7FH",
        "targetHandle": "{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-cy7FHœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}",
        "data": {
          "targetHandle": {
            "fieldName": "llm",
            "id": "CombineDocsChain-cy7FH",
            "inputTypes": null,
            "type": "BaseLanguageModel"
          },
          "sourceHandle": {
            "baseClasses": [
              "BaseLanguageModel",
              "BaseChatModel",
              "ChatOpenAI",
              "BaseLLM"
            ],
            "dataType": "ChatOpenAI",
            "id": "ChatOpenAI-IUuxh"
          }
        },
        "style": { "stroke": "#555" },
        "className": "stroke-foreground  stroke-connection",
        "animated": false,
        "id": "reactflow__edge-ChatOpenAI-IUuxh{œbaseClassesœ:[œBaseLanguageModelœ,œBaseChatModelœ,œChatOpenAIœ,œBaseLLMœ],œdataTypeœ:œChatOpenAIœ,œidœ:œChatOpenAI-IUuxhœ}-CombineDocsChain-cy7FH{œfieldNameœ:œllmœ,œidœ:œCombineDocsChain-cy7FHœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"
      }
    ],
    "viewport": {
      "x": -276.288829110208,
      "y": 131.3615353711175,
      "zoom": 0.3888505734013338
    }
  },
  "description": "Simple Chat With PDF Using OpenAI Embedding and LLM.",
  "name": "Chat With PDF",
  "flow_type": "chat"
}
